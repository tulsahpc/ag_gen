network model =
	assets :
		#Digital
		tempSensor1;#May change to instrumented fuel rod
		tempSensor2;
		seismicSensor1;
		automaticScram;
		operator;
		#attacker; #May re-add later, just seems to bloat the graph now.
		controlRodController;
		controlBlade1;
		controlBlade2;
		controlBlade5;
		controlBlade4;
		pulseControlRod;
		buildingCompressedAir;
		linearPowerSensor;
		nlogPowerSensor;
		pulsePowerSensor;
		controlSystemRecorder;
		buildingEvacAlarm;
		beamRoomScramChain;
		highFluxMonitor;
		periodSensor;
		logNHVFailureSensor;
		CICHVFailureSensor;
		continuousAirMonitor;#prevously effluentDetector
		areaMonitoringSystem;
		diffuser;
		coolantLevelSensor;
		backupPower;

		#water purification system
		recirculationPump;
		flowmeter;
		conductivityCell1;
		conductivityCell2;
		ionExchanger;
		poolTotalizer;

		#heat exchange system
		coolantTempSensor;
		heatExchangePump1;
		heatExchangePump2;
		leakDetector;
		towerTotalizer;

		#Ventilation System
		ventilationController;
		ventilationIntakeFan;
		ventilationOuttakeFan;
		ventilationAirDetector;
		ventilationDampers;
		ventilationDiluteFan;

		#Physical
		#combining values
		reactor;
		coolant;
		airborneRadiation;
		buildingPower;
		seismicActivity;


	facts :
		#TempSensor Facts
		quality:tempSensor1,status=ok;
		quality:tempSensor2,status=ok;
		quality:tempSensor1,temp:=310;
		quality:tempSensor2,temp:=278;
		quality:tempSensor1,calibration=normal;
		quality:tempSensor2,calibration=normal;
		quality:tempSensor1,powerStatus=on;
		quality:tempSensor2,powerStatus=on;

		topology:tempSensor1->automaticScram,connected_modbus_slave;
		topology:tempSensor2->automaticScram,connected_modbus_slave;
		topology:tempSensor1->controlSystemRecorder,connected_modbus_slave;
		topology:tempSensor2->controlSystemRecorder,connected_modbus_slave;
		topology:tempSensor1->operator,connected_modbus_slave;
		topology:tempSensor2->operator,connected_modbus_slave;
		topology:reactor<->tempSensor1,physical;
		topology:reactor<->tempSensor2,physical;
		topology:buildingPower->tempSensor1,power:=120;
		topology:buildingPower->tempSensor2,power:=120;

		quality:tempSensor1,platform=tempSensor;
		quality:tempSensor2,platform=tempSensor;

		#SeismicSensor Facts
		quality:seismicSensor1,status=ok;
		quality:seismicSensor1,powerStatus=on;
		quality:seismicSensor1,magnitude:=.001;#may want to change

		topology:seismicSensor1->automaticScram,connected_modbus_slave;
		topology:seismicActivity<->seismicSensor1,physical;
		topology:buildingPower->seismicSensor1,power:=120;

		quality:seismicSensor1,platform=seismicSensor;

		#Automatic Scram Facts
		quality:automaticScram,status=ok;
		quality:automaticScram,powerStatus=on;
		quality:automaticScram,mode=manual;
		quality:automaticScram,activated=false;

		topology:automaticScram->controlRodController,connected_emag_power;
		topology:automaticScram->tempSensor1,connected_modbus_master;
		topology:automaticScram->tempSensor2,connected_modbus_master;
		topology:automaticScram->seismicSensor1,connected_modbus_master;
		topology:automaticScram->highFluxMonitor,connected_modbus_master;
		topology:automaticScram->buildingEvacAlarm,connected_modbus_master;
		topology:automaticScram->beamRoomScramChain,connected_modbus_master;
		topology:automaticScram->logNHVFailureSensor,connected_modbus_master;
		topology:automaticScram->CICHVFailureSensor,connected_modbus_master;
		topology:automaticScram->operator,connected_modbus_master;
		topology:buildingPower->automaticScram,power:=120;

		quality:automaticScram,platform=scramUnit;

		#Operator Facts
		quality:operator,status=ok;
		quality:operator,powerStatus=on;
		quality:operator,manualScram=false;
		quality:operator,operationMode=manual;

		topology:operator->automaticScram,connected_modbus_slave;
		#Split into two so it is visible in both sections, but is actually bidirectional
		topology:operator->controlSystemRecorder,connected_ethernet;
		topology:operator->coolantLevelSensor,connected_modbus_master;
		topology:operator->coolantTempSensor,connected_modbus_master;
		topology:operator->controlRodController,connected_modbus_master;
		topology:operator->buildingEvacAlarm,connected_modbus_master;
		topology:operator->tempSensor1,connected_modbus_master;
		topology:operator->tempSensor2,connected_modbus_master;
		topology:operator->linearPowerSensor,connected_modbus_master;
		topology:operator->nlogPowerSensor,connected_modbus_master;
		topology:operator->pulsePowerSensor,connected_modbus_master;
		topology:operator->continuousAirMonitor,connected_modbus_master;
		topology:operator->periodSensor,connected_modbus_master;
		topology:operator->areaMonitoringSystem,connected_modbus_master;
		topology:operator->ventilationAirDetector,connected_modbus_master;
		topology:operator->flowmeter,connected_modbus_master;
		topology:operator->conductivityCell1,connected_modbus_master;
		topology:operator->conductivityCell2,connected_modbus_master;
		topology:operator->heatExchangePump1,connected_modbus_master;
		topology:operator->heatExchangePump2,connected_modbus_master;
		topology:operator->leakDetector,connected_modbus_master;
		topology:buildingPower->operator,power:=120;

		quality:operator,platform=operatorStation;

		#Control Rod Facts
		quality:controlRodController,status=ok;
		quality:controlRodController,powerStatus=on;
		quality:controlRodController,emagPower=on;

		topology:controlRodController->operator,connected_modbus_slave;
		topology:controlRodController->buildingCompressedAir,connected_modbus_master;
		topology:buildingPower->controlRodController,power:=120;

		quality:controlRodController,platform=controlRodController;

		#Control rod position intended to represent inches above full insertion
			quality:controlBlade1,motorStatus=ok;
			quality:controlBlade2,motorStatus=ok;
			quality:controlBlade4,motorStatus=ok;
			quality:controlBlade4,motorStatus=ok;
			quality:controlBlade5,motorStatus=ok;

			quality:controlBlade1,actualPosition:=1.5;
			quality:controlBlade2,actualPosition:=1.5;
			quality:controlBlade5,actualPosition:=1.5;
			quality:controlBlade4,actualPosition:=1.5;

			quality:controlBlade1,reportedPosition:=1.5;
			quality:controlBlade2,reportedPosition:=1.5;
			quality:controlBlade5,reportedPosition:=1.5;
			quality:controlBlade4,reportedPosition:=1.5;

			quality:pulseControlRod,actualPosition:=0;
			quality:pulseControlRod,cylinderPosition:=0;
			quality:pulseControlRod,reportedPosition:=0;
			quality:pulseControlRod,pulsed=false;

			quality:controlBlade1,platform=controlBlade;
			quality:controlBlade2,platform=controlBlade;
			quality:controlBlade5,platform=controlBlade;
			quality:controlBlade4,platform=controlBlade;
			quality:pulseControlRod,platform=pulseControlRod;

			#Subcomponent Connections
			topology:controlBlade1->controlRodController,subcomponent;
			topology:controlBlade2->controlRodController,subcomponent;
			topology:controlBlade5->controlRodController,subcomponent;
			topology:controlBlade4->controlRodController,subcomponent;
			topology:pulseControlRod->controlRodController,subcomponent;

		#Building Compressed Air
		quality:buildingCompressedAir,status=ok;
		quality:buildingCompressedAir,powerStatus=on;
		quality:buildingCompressedAir,compressor=on;
		quality:buildingCompressedAir,ctValve=closed;#Compressor to Tank
		quality:buildingCompressedAir,tankPressure=10;#Need some kind of units

		topology:buildingCompressedAir->controlRodController,connected_modbus_slave;
		topology:buildingCompressedAir->pulseControlRod,pneumatic_closed;
		topology:buildingPower->buildingCompressedAir,power:=120;

		quality:buildingCompressedAir,platform=airCompressor;

		#Power Sensors
		#Power units are in percent max
			#Linear
			quality:linearPowerSensor,status=ok;
			quality:linearPowerSensor,powerStatus=on;
			quality:linearPowerSensor,powerLevel:=0.1;#leading 0 was required.

			topology:linearPowerSensor->highFluxMonitor,connected_modbus_slave;
			topology:linearPowerSensor->controlSystemRecorder,connected_modbus_slave;
			topology:linearPowerSensor->operator,connected_modbus_slave;

			topology:reactor<->linearPowerSensor,physical;
			topology:buildingPower->linearPowerSensor,power:=120;

			quality:linearPowerSensor,platform=powerSensor;

			#nlog
			quality:nlogPowerSensor,status=ok;
			quality:nlogPowerSensor,powerStatus=on;
			quality:nlogPowerSensor,powerLevel:=0.1;

			topology:nlogPowerSensor->operator,connected_modbus_slave;
			topology:reactor<->nlogPowerSensor,physical;
			topology:buildingPower->nlogPowerSensor,power:=120;

			quality:nlogPowerSensor,platform=powerSensor;

			#Pulse
			quality:pulsePowerSensor,status=ok;
			quality:pulsePowerSensor,powerStatus=on;
			quality:pulsePowerSensor,powerLevel:=0.1;

			topology:pulsePowerSensor->operator,connected_modbus_slave;
			topology:reactor<->pulsePowerSensor,physical;
			topology:buildingPower->pulsePowerSensor,power:=120;

			quality:pulsePowerSensor,platform=powerSensor;

		#Control System Recorder
		quality:controlSystemRecorder,status=ok;
		quality:controlSystemRecorder,powerStatus=on;
		quality:controlSystemRecorder,dataValid=true;

		topology:controlSystemRecorder->tempSensor1,connected_modbus_master;
		topology:controlSystemRecorder->tempSensor2,connected_modbus_master;
		topology:controlSystemRecorder->linearPowerSensor,connected_modbus_master;
		topology:buildingPower->controlSystemRecorder,power:=120;

		quality:controlSystemRecorder,platform=controlSystemRecorder;

		#Building Evacuation Alarm
		quality:buildingEvacAlarm,status=ok;
		quality:buildingEvacAlarm,powerStatus=on;
		quality:buildingEvacAlarm,activated=false;

		topology:buildingEvacAlarm->areaMonitoringSystem,connected_modbus_master;
		topology:buildingEvacAlarm->coolantLevelSensor,connected_modbus_master;
		topology:buildingEvacAlarm->operator,connected_modbus_slave;
		topology:buildingEvacAlarm->automaticScram,connected_modbus_slave;
		topology:buildingPower->buildingEvacAlarm,power:=120;

		quality:buildingEvacAlarm,platform=evacuationAlarm;

		#Beam Room Scram Chain
		quality:beamRoomScramChain,status=ok;
		quality:beamRoomScramChain,powerStatus=on;
		quality:beamRoomScramChain,activated=false;

		topology:beamRoomScramChain->automaticScram,connected_modbus_slave;
		topology:buildingPower->beamRoomScramChain,power:=120;#Do I need this?

		quality:beamRoomScramChain,platform=scramInput;#Need to check

		#High Flux Monitor
		quality:highFluxMonitor,status=ok;
		quality:highFluxMonitor,powerStatus=on;
		quality:highFluxMonitor,alarmActivated=false;

		topology:highFluxMonitor->linearPowerSensor,connected_modbus_master;
		topology:highFluxMonitor->automaticScram,connected_modbus_slave;
		topology:buildingPower->highFluxMonitor,power:=120;

		quality:highFluxMonitor,platform=fluxMonitor;

		#Period Sensor
		quality:periodSensor,status=ok;
		quality:periodSensor,powerStatus=on;
		quality:periodSensor,output=normal;

		topology:periodSensor->operator,connected_modbus_slave;
		topology:buildingPower->periodSensor,power:=120;

		quality:periodSensor,platform=periodSensor;

		#HV Failure Sensors
		quality:logNHVFailureSensor,status=ok;
		quality:logNHVFailureSensor,powerStatus=on;
		quality:logNHVFailureSensor,activated=false;
		quality:CICHVFailureSensor,status=ok;
		quality:CICHVFailureSensor,powerStatus=on;
		quality:CICHVFailureSensor,activated=false;

		topology:logNHVFailureSensor->automaticScram,connected_modbus_slave;
		topology:CICHVFailureSensor->automaticScram,connected_modbus_slave;
		topology:buildingPower->logNHVFailureSensor,power:=120;
		topology:buildingPower->CICHVFailureSensor,power:=120;

		quality:CICHVFailureSensor,platform=HVSensor;
		quality:logNHVFailureSensor,platform=HVSensor;

		#Continous Air Monitor
		quality:continuousAirMonitor,status=ok;
		quality:continuousAirMonitor,powerStatus=on;
		quality:continuousAirMonitor,airborneRadiation=low;

		topology:continuousAirMonitor->operator,connected_modbus_slave;
		topology:continuousAirMonitor->ventilationController,connected_modbus_slave;
		topology:airborneRadiation<->continuousAirMonitor,physical;
		topology:buildingPower->continuousAirMonitor,power:=120;

		quality:continuousAirMonitor,platform=CAM;

		#Area Monitoring System
		quality:areaMonitoringSystem,status=ok;
		quality:areaMonitoringSystem,powerStatus=on;
		quality:areaMonitoringSystem,N16_level:=0;

		topology:areaMonitoringSystem->buildingEvacAlarm,connected_modbus_slave;
		topology:areaMonitoringSystem->operator,connected_modbus_slave;
		topology:airborneRadiation<->areaMonitoringSystem,physical;
		topology:buildingPower->areaMonitoringSystem,power:=120;

		quality:areaMonitoringSystem,platform=N16Detector;

		#Diffuser, no connections
		quality:diffuser,status=ok;
		quality:diffuser,powerStatus=on;

		topology:buildingPower->diffuser,power:=120;

		quality:diffuser,platform=diffuser;

		#Coolant Level Sensor
		quality:coolantLevelSensor,status=ok;
		quality:coolantLevelSensor,powerStatus=on;
		quality:coolantLevelSensor,level:=0.0;#defining 0 as neutral

		topology:coolantLevelSensor->operator,connected_modbus_slave;
		topology:coolantLevelSensor->buildingEvacAlarm,connected_modbus_slave;
		topology:coolant<->coolantLevelSensor,physical;
		topology:buildingPower->coolantLevelSensor,power:=120;

		quality:coolantLevelSensor,platform=coolantLevelSensor;

		#Backup power and connections
		quality:backupPower,status=ok;
		quality:backupPower,chargeLevel:=1;#percent, 1 down to 0

		#Only provides power when main power is off
		topology:backupPower->buildingEvacAlarm,power:=0.0;
		topology:backupPower->areaMonitoringSystem,power:=0.0;
		topology:backupPower->coolantLevelSensor,power:=0;
		topology:backupPower->seismicSensor1,power:=1.0;
		topology:buildingPower->backupPower,power:=120;#needs to charge

		quality:backupPower,platform=backupPower;



		#Water Puritfication Systems

		#Recirculation Pump
		quality:recirculationPump,status=ok;
		quality:recirculationPump,powerStatus=on;
		topology:recirculationPump->operator,connected_modbus_slave;
		topology:coolant<->recirculationPump,physical;
		topology:buildingPower->recirculationPump,power:=120;

		quality:recirculationPump,platform=pump;

		#Flowmeter
		quality:flowmeter,status=ok;
		quality:flowmeter,powerStatus=on;
		quality:flowmeter,flowRate:=10;#arbitrary for now

		topology:flowmeter->operator,connected_modbus_slave;
		topology:coolant<->flowmeter,physical;
		topology:buildingPower->flowmeter,power:=120;

		quality:flowmeter,platform=flowmeter;

		#Conductivity Cells
		quality:conductivityCell1,status=ok;
		quality:conductivityCell1,powerStatus=on;
		quality:conductivityCell1,resistance:=18.2;#in MOhms
		quality:conductivityCell2,status=ok;
		quality:conductivityCell2,powerStatus=on;
		quality:conductivityCell2,resistance:=18.5;#in MOhms

		topology:conductivityCell1->operator,connected_modbus_slave;
		topology:conductivityCell2->operator,connected_modbus_slave;
		topology:coolant<->conductivityCell1,physical;
		topology:coolant<->conductivityCell2,physical;
		topology:buildingPower->conductivityCell1,power:=120;
		topology:buildingPower->conductivityCell2,power:=120;

		quality:conductivityCell1,platform=conductivitySensor;
		quality:conductivityCell2,platform=conductivitySensor;

		#Ion Exchanger (no power)
		quality:ionExchanger,status=ok;

		topology:coolant<->ionExchanger,physical;

		quality:ionExchanger,platform=ionExchanger;

		#Pool Totalizer (no power)
		quality:poolTotalizer,status=ok;

		topology:coolant<->poolTotalizer,physical;

		quality:poolTotalizer,platform=totalizer;



		#Heat Exchange System

		#Coolant Temperature Sensor
		quality:coolantTempSensor,status=ok;
		quality:coolantTempSensor,powerStatus=on;
		quality:coolantTempSensor,temp:=330;

		topology:coolantTempSensor->operator,connected_modbus_slave;
		topology:coolant<->coolantTempSensor,physical;
		topology:buildingPower->coolantTempSensor,power:=120;

		quality:coolantTempSensor,platform=coolantTempSensor;

		#Heat Exchange Pumps
		quality:heatExchangePump1,status=ok;
		quality:heatExchangePump1,powerStatus=on;
		quality:heatExchangePump2,status=ok;
		quality:heatExchangePump2,powerStatus=on;

		topology:heatExchangePump1->operator,connected_modbus_slave;
		topology:heatExchangePump2->operator,connected_modbus_slave;
		topology:coolant<->heatExchangePump1,physical;
		topology:coolant<->heatExchangePump2,physical;
		topology:buildingPower->heatExchangePump1,power:=120;
		topology:buildingPower->heatExchangePump2,power:=120;
		quality:heatExchangePump1,platform=pump;
		quality:heatExchangePump2,platform=pump;

		#Leak Detector
		quality:leakDetector,status=ok;#Another conductivity sensor
		quality:leakDetector,powerStatus=on;
		quality:leakDetector,resistance:=18.2;#in MOhms
		quality:leakDetector,leakDetected=false;

		topology:leakDetector->operator,connected_modbus_slave;
		topology:coolant<->leakDetector,physical;
		topology:buildingPower->leakDetector,power:=120;

		quality:leakDetector,platform=conductivitySensor;

		#Tower Totalizer (no power)
		quality:towerTotalizer,status=ok;

		topology:coolant<->towerTotalizer,physical;

		quality:towerTotalizer,platform=totalizer;



		#Ventilation System

		#Ventilaton Controller
		quality:ventilationController,status=ok;
		quality:ventilationController,powerStatus=on;
		quality:ventilationController,mode=normal;

		topology:ventilationController->ventilationIntakeFan,connected_modbus_master;
		topology:ventilationController->ventilationOuttakeFan,connected_modbus_master;
		topology:ventilationController->ventilationDiluteFan,connected_modbus_master;
		topology:ventilationController->continuousAirMonitor,connected_modbus_master;
		topology:ventilationController->operator,connected_modbus_slave;
		topology:buildingPower->ventilationController,power:=120;

		quality:ventilationController,platform=ventilationController;

		#Intake Fan
		quality:ventilationIntakeFan,status=ok;
		quality:ventilationIntakeFan,powerStatus=on;
		quality:ventilationIntakeFan,fan=on;

		topology:ventilationIntakeFan->ventilationController,connected_modbus_slave;
		topology:buildingPower->ventilationIntakeFan,power:=120;

		quality:ventilationIntakeFan,platform=fan;

		#Outtake Fan
		quality:ventilationOuttakeFan,status=ok;
		quality:ventilationOuttakeFan,powerStatus=on;
		quality:ventilationOuttakeFan,fan=on;

		topology:ventilationOuttakeFan->ventilationController,connected_modbus_slave;
		topology:buildingPower->ventilationOuttakeFan,power:=120;

		quality:ventilationOuttakeFan,platform=fan;

		#Ventilation Air Detector
		quality:ventilationAirDetector,status=ok;
		quality:ventilationAirDetector,powerStatus=on;
		quality:ventilationAirDetector,Ar41_level:=0.0;

		topology:ventilationAirDetector->operator,connected_modbus_slave;
		topology:buildingPower->ventilationAirDetector,power:=120;
		topology:airborneRadiation<->ventilationAirDetector,physical;

		quality:ventilationAirDetector,platform=Ar41Detector;

		#Ventilation Dampers
		quality:ventilationDampers,status=ok;
		quality:ventilationDampers,powerStatus=on;
		quality:ventilationDampers,dampers=open;

		topology:ventilationDampers->ventilationController,connected_modbus_slave;
		topology:buildingPower->ventilationDampers,power:=120;

		quality:ventilationDampers,platform=dampers;


		#Ventilation Dilute Fan
		quality:ventilationDiluteFan,status=ok;
		quality:ventilationDiluteFan,powerStatus=on;
		quality:ventilationDiluteFan,fan=on;

		topology:ventilationDiluteFan->ventilationController,connected_modbus_slave;
		topology:buildingPower->ventilationDiluteFan,power:=120;

		quality:ventilationDiluteFan,platform=fan;


		#Physical qualites
		#This is probably bad practice, reusing these names
		quality:reactor,fuelTemp:=330;
		quality:reactor,reactorPower:=0.1;
		quality:coolant,coolantLevel:=0.0;
		quality:coolant,coolantTemp:=330;
		quality:airborneRadiation,airborneFissionProducts=low;
		quality:airborneRadiation,N16_level:=0;#mrem/hr appears to be the appropriate measurement.
		quality:airborneRadiation,Ar41_level:=0;
		quality:buildingPower,buildingPower=on;
		quality:seismicActivity,seismicActivity:=2.4;

		#Physical items are of the "physical" platfrom for now.
		quality:reactor,platform=physical;
		quality:coolant,platform=physical;
		quality:airborneRadiation,platform=physical;
		quality:buildingPower,platform=physical;
		quality:seismicActivity,platform=physical;



.
