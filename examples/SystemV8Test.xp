exploit backupPowerOn(building,backup,system)=
	preconditions:
		quality:backup,platform=backupPower;
		topology:building->backup,power<114;#Trigger when backup can't charge
		topology:backup->system,power<114;
		quality:backup,chargeLevel>0;
		quality:backup,status=ok;
	postconditions:
		update topology:backup->system,power:=120;
.

exploit sensorPowerLoss(phys,sensor)=
	preconditions:
		quality:phys,platform=physical;
		quality:phys,buildingPower=on;
		topology:phys->sensor,power<126;
		topology:phys->sensor,power>=114;


		quality:sensor,platform!=controlRodController;

	postconditions:
		update quality:phys,buildingPower=off;
		update quality:sensor,powerStatus=off;
		update topology:phys->sensor,power:=0;
.

exploit controlRodPowerLoss(phys,crc)=
	preconditions:
		quality:phys,platform=physical;
		quality:phys,buildingPower=on;
		topology:phys->crc,power<=126;
		topology:phys->crc,power>=114;


		quality:crc,platform=controlRodController;
	postconditions:
		update quality:phys,buildingPower=off;
		update quality:crc,powerStatus=off;
		update quality:crc,emagPower=off;
		update topology:phys->crc,power:=0;
.
