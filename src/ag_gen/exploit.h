#ifndef EXPLOIT_HPP
#define EXPLOIT_HPP

#include <memory>
#include <string>
#include <vector>

#include "parameterized_quality.h"
#include "parameterized_topology.h"

/** Exploit class
 * @brief Holds information about an exploit.
 * @details Holds information about an exploit including:
 *
 * - id
 * - name
 * - preconditions
 * - postconditions
 */
class Exploit {
    int id;
    std::string name;
    int num_params;

    std::vector<ParameterizedQuality> preconds_q;
    std::vector<ParameterizedTopology> preconds_t;

    std::vector<ParameterizedQuality> postconds_q;
    std::vector<ParameterizedTopology> postconds_t;

    void fetch_preconds();

    void fetch_postconds();

  public:
    Exploit(int preId, std::string &preName, int preNumParams, 
            std::tuple<std::vector<ParameterizedQuality>, std::vector<ParameterizedTopology>> preconds,
            std::tuple<std::vector<ParameterizedQuality>, std::vector<ParameterizedTopology>> postconds);

    int get_id() const { return id; }

    std::string get_name() const { return name; }

    int get_num_params() const { return num_params; }

    void print_preconds_q();
    void print_preconds_t();
    void print_postconds_q();
    void print_postconds_t();
    void print_id();

    std::vector<ParameterizedQuality> precond_list_q();
    std::vector<ParameterizedTopology> precond_list_t();
    std::vector<ParameterizedQuality> postcond_list_q();
    std::vector<ParameterizedTopology> postcond_list_t();

    // static std::vector<Exploit> fetch_all();

    static void print_all();
};

#endif // EXPLOIT_HPP
