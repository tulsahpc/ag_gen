#ifndef EXPLOIT_HPP
#define EXPLOIT_HPP

#include <vector>
#include <memory>
#include <string>

#include "fact.hpp"

class Exploit {
	int id;
	std::string name;
	int num_params;

    std::vector<ParameterizedQuality> preconds_q;
	std::vector<ParameterizedTopology> preconds_t;

    std::vector<ParameterizedQuality> postconds_q;
    std::vector<ParameterizedTopology> postconds_t;

    void fetch_preconds(void);
    void fetch_postconds(void);

public:
	Exploit(int preId, std::string preName, int preNumParams);

	int get_id(void);
	std::string get_name(void);
	int get_num_params(void);

	void print_preconds_q(void);
	void print_preconds_t(void);

    void print_postconds_q(void);
    void print_postconds_t(void);

    void print_id(void);

	std::vector<ParameterizedQuality> precond_list_q(void);
	std::vector<ParameterizedTopology> precond_list_t(void);

	std::vector<ParameterizedQuality> postcond_list_q(void);
	std::vector<ParameterizedTopology> postcond_list_t(void);

	static std::vector<Exploit> fetch_all(void);
	static void print_all(void);
};

#endif // EXPLOIT_HPP
