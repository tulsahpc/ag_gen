all: caggen_e
	
clean:
	rm caggen.o caggen_e identifier.o network_state_parser.tab.c network_state_parser.tab.h \
	network_state_parser.tab.o network_state.c network_state.o network_state_util.o \
	exploits_parser.tab.c exploits_parser.tab.h exploits_parser.tab.o exploits.c exploits.o exploit_utils.o

caggen_e: caggen.o ag_generator_utils.o identifier.o network_state.o network_state_parser.tab.o network_state_util.o \
	exploits.o exploits_parser.tab.o exploit_utils.o
	gcc -g -o caggen_e caggen.o ag_generator_utils.o identifier.o network_state_parser.tab.o network_state.o network_state_util.o \
	exploits_parser.tab.o exploits.o exploit_utils.o -ll

caggen.o: caggen.c exploit.h network_state.h identifier.h globals.h
	gcc -c -g caggen.c 
	
ag_generator_utils:	ag_generator_utils.c ag_generator_utils.h identifier.h globals.h exploit.h network_state.h
	gcc -c -g ag_generator.c

identifier.o: identifier.c identifier.h
	gcc -c -g identifier.c
	
network_state_util.o: network_state_util.c network_state.h identifier.h globals.h
	gcc -c -g network_state_util.c
	
network_state_parser.tab.o: network_state_parser.tab.c network_state_parser.tab.h globals.h network_state.h identifier.h
	gcc -c -g network_state_parser.tab.c

network_state_parser.tab.c network_state_parser.tab.h: network_state_parser.y
	bison -d network_state_parser.y
	
network_state.o: network_state.l network_state.h network_state_parser.tab.h globals.h
	flex network_state.l
	gcc -c -g network_state.c

exploit_utils.o: exploit_utils.c exploit.h identifier.h globals.h
	gcc -c -g exploit_utils.c
	
exploits_parser.tab.o: exploits_parser.y exploits_parser.tab.c exploits_parser.tab.h exploit.h globals.h identifier.h
	gcc -c -g exploits_parser.tab.c

exploits_parser.tab.c exploits_parser.tab.h: exploits_parser.y
	bison -d exploits_parser.y
		
exploits.o: exploits.l exploit.h exploits_parser.tab.h
	flex exploits.l
	gcc -c -g exploits.c